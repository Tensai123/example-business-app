name: Deploy Python Application

on:
  push:
    branches: [main, develop]
    paths:
      - 'app/**'
      - '.github/workflows/deploy-application.yml'
  pull_request:
    branches: [main]
    paths:
      - 'app/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.ACR_LOGIN_SERVER }}/python-app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get App Service publish profile
        id: publishprofile
        run: |
          PROFILE=$(az webapp deployment list-publishing-profiles --name poc-dev-python-app-12345 --resource-group poc-rg-dev --xml)
          echo "profile<<EOF" >> $GITHUB_OUTPUT
          echo "$PROFILE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'poc-dev-python-app-12345'
          publish-profile: ${{ steps.publishprofile.outputs.profile }}
          images: ${{ needs.build.outputs.image-tag }}

      - name: Update App Settings
        run: |
          az webapp config appsettings set \
            --name poc-dev-python-app-12345 \
            --resource-group poc-rg-dev \
            --settings \
              ENVIRONMENT=development \
              DEBUG=true \
              LOG_LEVEL=DEBUG \
              DATABASE_URL="@Microsoft.KeyVault(VaultName=poc-dev-kv-12345;SecretName=database-connection-string)"

      - name: Restart App Service
        run: |
          az webapp restart --name poc-dev-python-app-12345 --resource-group poc-rg-dev

      - name: Health Check
        run: |
          sleep 30
          curl -f https://poc-dev-python-app-12345.azurewebsites.net/health || exit 1

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, deploy-dev]
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get App Service publish profile
        id: publishprofile
        run: |
          PROFILE=$(az webapp deployment list-publishing-profiles --name poc-prod-python-app-12345 --resource-group poc-rg-prod --xml)
          echo "profile<<EOF" >> $GITHUB_OUTPUT
          echo "$PROFILE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Deploy to Azure App Service (Staging Slot)
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'poc-prod-python-app-12345'
          slot-name: 'staging'
          publish-profile: ${{ steps.publishprofile.outputs.profile }}
          images: ${{ needs.build.outputs.image-tag }}

      - name: Update App Settings (Staging)
        run: |
          az webapp config appsettings set \
            --name poc-prod-python-app-12345 \
            --slot staging \
            --resource-group poc-rg-prod \
            --settings \
              ENVIRONMENT=production \
              DEBUG=false \
              LOG_LEVEL=INFO \
              DATABASE_URL="@Microsoft.KeyVault(VaultName=poc-prod-kv-12345;SecretName=database-connection-string)"

      - name: Warm up staging slot
        run: |
          sleep 30
          curl -f https://poc-prod-python-app-12345-staging.azurewebsites.net/health || exit 1

      - name: Run smoke tests on staging
        run: |
          curl -f https://poc-prod-python-app-12345-staging.azurewebsites.net/api/status || exit 1
          # Add more smoke tests here

      - name: Swap staging to production
        run: |
          az webapp deployment slot swap \
            --name poc-prod-python-app-12345 \
            --resource-group poc-rg-prod \
            --slot staging \
            --target-slot production

      - name: Health Check Production
        run: |
          sleep 30
          curl -f https://poc-prod-python-app-12345.azurewebsites.net/health || exit 1

      - name: Post-deployment notification
        if: success()
        run: |
          echo "âœ… Production deployment successful!"
          # Add Slack/Teams notification here if needed

  rollback:
    name: Rollback Production
    runs-on: ubuntu-latest
    if: failure() && github.ref == 'refs/heads/main'
    needs: deploy-prod
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Rollback to previous version
        run: |
          az webapp deployment slot swap \
            --name poc-prod-python-app-12345 \
            --resource-group poc-rg-prod \
            --slot staging \
            --target-slot production

      - name: Verify rollback
        run: |
          sleep 30
          curl -f https://poc-prod-python-app-12345.azurewebsites.net/health || exit 1
